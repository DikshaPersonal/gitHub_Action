name: Build Ionic Android App

on:
  push:
    branches:
      - action_main  # Change to your actual branch

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Install Ionic & Capacitor
        run: npm install -g @ionic/cli @capacitor/cli

      - name: Build Ionic App
        run: ionic build --prod

      - name: Sync with Android
        run: npx cap sync android

      - name: Build Android APK/AAB
        run: |
          cd android
          ./gradlew assembleRelease
          ./gradlew bundleRelease

      - name: Upload APK/AAB as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/bundle/release/*.aab

  upload:
    name: Upload APK to Google Drive
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-build
          path: app

      - name: List Downloaded Files
        run: ls -lh app/

      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash
          rclone version

      - name: Configure rclone
        run: |
          mkdir -p ~/.config/rclone
          echo '[gdrive]
          type = drive
          scope = drive
          service_account_file = /tmp/sa.json' > ~/.config/rclone/rclone.conf

      - name: Create Google Drive credentials file
        run: |
          echo '${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}' > /tmp/sa.json
          chmod 600 /tmp/sa.json

      - name: Verify Service Account JSON
        run: |
          jq empty /tmp/sa.json || { echo "Invalid JSON format in service account file!"; exit 1; }

      - name: Test rclone Connection
        run: rclone lsd gdrive: --drive-service-account-file /tmp/sa.json

      - name: Check if AAB Exists
        run: |
          AAB_FILE=$(ls app/*.aab 2>/dev/null | head -n 1)
          if [ -z "$AAB_FILE" ]; then
            echo "❌ AAB file not found!"
            exit 1
          fi
          echo "✅ Found AAB file: $AAB_FILE"

      - name: Rename AAB File with Timestamp
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M")
          AAB_FILE=$(ls app/*.aab 2>/dev/null | head -n 1)
          NEW_NAME="app/app-release-$TIMESTAMP.aab"
          mv "$AAB_FILE" "$NEW_NAME"
          echo "✅ Renamed to: $NEW_NAME"

      - name: Upload AAB to Google Drive
        run: |
          AAB_FILE=$(ls app/app-release-*.aab 2>/dev/null | head -n 1)
          if [ -z "$AAB_FILE" ]; then
            echo "❌ No renamed AAB file found for upload."
            exit 1
          fi
          echo "Uploading $AAB_FILE to Google Drive..."
          rclone copy "$AAB_FILE" gdrive:${{ secrets.GOOGLE_DRIVE_FOLDER_ID }} --drive-service-account-file /tmp/sa.json -P
